/** DOM 트리
 * HTML을 지탱하는 것은 태그(tag)이다.
 * 문서 객체 모델(DOM)에 따르면, 모든 HTML 태그는 객체이다. 
 * 태그 하나가 감싸고 있는 '자식'태그는 중첩 태그(nested tag)라고 부른다.
 * 태그 내의 문자(text) 역시 객체이다.
 * 
 * 이런 모든 객체는 자바스크립트를 통해 접근할 수 있고, 페이지를 조작할 때 이 객체를 사용한다.
 * `document.body`는 `<body>` 태그를 객체로 나타낸 것이다.
 * 아래 예시를 실행하면 <body>가 3초간 붉은 색으로 변경된다.
 */
document.body.style.background = "red"; // 배경을 붉은 색으로 변경하기

setTimeout(() => document.body.style.background = "", 3000); // 원상태로 복구하기

/* 위 예시에선 document.body의 배경색을 바꾸기 위해 style.background을 사용했는데, 이 외에도 다양한 프로퍼티가 존재한다.
    * innerHTML - 해당 노드의 HTML 콘텐츠
    * offsetWidth - 해당 노드의 너비(픽셀)
    * 기타 등등
 */

/** DOM 예제
 * 간단한 문서를 이용해 DOM 구조에 대해 알아보자

<!DOCTYPE HTML>
<html>
<head>
    <title>사슴에 관하여</title>
</head>
<body>
    사슴에 관한 진실.
</body>
</html>

 * DOM은 HTML을 아래와 같이 태그 트리 구조로 표현한다.

 * HTML
    * HEAD
        #text ↵␣␣␣␣
        * TITLE
            #text 사슴에 관하여
        #text ↵␣␣
    #text ↵␣␣
    * BODY
        #text ↵␣␣사슴에 관한 진실.

 * 트리에 있는 노드는 모두 객체이다.
 * 태그는 요소 노드(element node) (혹은 그냥 요소)이고, 트리 구조를 구성한다. <html>은 루트 노드가 되고,
 * <head>와 <body>는 '루트 노드의 자식'이 된다.
 * 
 * 요소 내의 문자는 텍스트(text) 노드가 된다. 텍스트 노드는 문자열만 담는다. 
 * 자식 노드를 가질 수 없고, 트리의 끝에서 잎 노드(leaf node)가 된다.
 * 
 * <title>태그는 "사슴에 관하여"라는 텍스트 노드를 자식을 갖는다.
 * 
 * 택스트 노드에 있는 특수문자를 눈여겨보자.
    * 새 줄(newilne):`↵`(자바스크립트에선 `\n`로 표시)
    * 공백(space): `␣`
 * 새 줄(newilne)과 공백(space)은 글자나 숫자처럼 항상 유효한 문자로 취급된다.
 * 따라서 이 두 특수문자는 텍스트 노드가 되고, DOM의 일부가 된다.
 * 위 HTML 문서를 보면 <head>와 <title> 사이에 새 줄과 약간의 공백이 있는 것을 볼 수 있는데, 이런 특수문자 역시 #text 노드가 된다.
 * 
 * 텍스트 노드 생성엔 두 가지 예외가 있다.
 * 1. 역사적인 이유로, <head> 이전의 공백과 새 줄은 무시된다.
 * 2. HTML 명세서에서 모든 콘텐츠는 body 안쪽에 있어야 한다고 했으므로, 
 *  </body> 뒤에 무언가를 넣더라도 그 콘텐츠는 자동으로 body 안쪽으로 옮겨진다. 따라서 </body> 뒤엔 공백이 있을 수 없다.
 * 
 * 두 예외를 제외하돈 아주 간단하다. 문서 내에 공백이 있다면 다른 문자와 마찬갖로 텍스트 노드가 된다. 
 * 그리고 공백을 지우면 텍스트 노드도 사라진다.
 * 
 * 공백이 없는 텍스트 노드만으로 HTML 문서를 구성하려면 HTML을 아래오ㅘ 같이 만들어야 한다.

<!DOCTYPE HTML>
<html><head><title>사슴에 관하여</title></head><body>사슴에 관한 진실</body></html>

 * HTML
     * HEAD
        * TITLE
            #text 사슴에 관하여 
     * BODY
        #text 사슴에 관하여
 */

/* i) 문자열 양 끝 공백과 공백만 있는 텍스트 노드는 개발자 도구에서 보이지 않는다.
 * DOM을 다룰 때 키게 되는 브라우저 개발자 도구에선 
 * 문자 맨 앞이나 끝쪽의 공백과 태그 사이의 새 줄 때문에 만들어지는 비어있는 택스트 노드가 나타나지 않는다.
 * 
 * 개발자 도구는 이런 방식으로 화면을 덜 차지하게 만들어졌다.
 * 공백이나 새 줄이 만들어내는 공간은 HTML 문서가 브라우저상에 어떻게 표현되는지 대개는 영향을 끼치지 않는다.
 */

/** 자동 교정
 * 기형적인 HTML을 만나면 브라우저는 DOM 생서과정에서 HTML을 자동으로 교정한다.
 * 예를 들어 가장 최상위 태그는 항상 <html>이어야 하는데 문서에 <html> 태그가 없는 경우,
 * 문서 최상위에 이를 자동으로 넣어준다. 따라서 DOM에는 <html>에 대응하는 노드가 항상 있다. <body>도 같은 방식으로 적용된다.
 * 
 * 만약 HTML 파일에 "안녕하세요."라는 문장 하나만 저장된 상황이라면, 브라우저가 자동으로 이 문장을 <html>과 <body>로 감싸준다.
 * 그리고 <head>도 더해줘서 아래와 같은 DOM이 만들어진다.
 * HTML
    * HEAD
    * BODY
        #text 안녕하세요.
 * 
 * DOM 생성과정에서 브라우저는 문서에 있는 에러 등, 닫는 태그가 없는 에러 등을 자동으로 처리한다.
 * 닫는 태그가 없는 경우:

<p>안녕하세요.
<li>엄마
<li>그리고
<li>아빠

 * 이렇게 태그 짝이 안맞아도 브라우저는 태그를 읽고, 자동으로 빠진 부분을 채워 넣어 준다.
 * 따라서 최종 결과물은 정상적인 DOM이 된다.
 * HTML
     * HEAD
     * BODY
        * P
            #text 안녕하세요.
        * LI
            #text 엄마
        * LI
            #text 그리고
        * LI
            #text 아빠
 */

/** !) 테이블엔 언제나 <tbody>가 있다.
 * DOM 명세서에선 테이블에 반드시 <tbody>가 있어야 한다고 못 박아 놓았지만, 
 * HTML에선 <tbody>를 생략하곤 한다.
 * 이때 브라우저는 자동으로 DOM에 <tbody>를 만들어준다.
 * 
 * HTML:
    <table id="table"><tr><td>1</td></tr></table>

 * 브라우저가 만들어낸 DOM 구조:
 * TABLE
    * TBODY
        * TR
            * TD
                #text 1 
 * <tbody>가 나타났다. 테이블을 다룰 땐 위와 같이 생기는 것을 상기하자.
 */

/** 기타 노드 타입
 * 요소와 텍스트 노드 외에도 다양한 노드 타입이 있다.
 * 주석도 노드가 된다. 
<!DOCTYPE HTML>
<html>
<body>
    사슴에 관한 진실.
    <ol>
        <li>사슴은 똑똑합니다.</li>
        <!-- comment -->
        <li>그리고 잔꾀를 잘 부리죠!</li>
    </ol>
</body>
</html>

 * HTML
    * HEAD
    * BODY
        #text ↵␣␣사슴에 관한 진실.↵␣␣␣␣
        * OL
            #text ↵␣␣␣␣␣␣
            * LI
                #text 사슴은 똑똑합니다.
            #text ↵␣␣␣␣␣␣
            #comment comment
            #text ↵␣␣␣␣␣␣
            * LI
                #text 그리고 잔꾀를 잘 부리죠!
            #text ↵␣␣␣␣
        #text ↵␣␣↵

 * 트리에 주석 노드(comment node)라는 새로운 노드 타입이 등장했다. 
 * 현재 #comment로 표현되는 주석 노드는 두 텍스트 노드 사이에 존재한다.
 * 
 * 주석은 화면 출력물에 영향을 주지 않지만, DOM에 추가가 된다.
 * 주석 노드는 HTML에 뭔가 있다면 반드시 DOM 트리에 추가되어야 한다는 규칙 때문에 DOM에 추가된 것이다.
 * 즉, HTML 안의 모든 것은(심지어 그것이 주석이라도) DOM을 구성한다.
 * 
 * HTML 문서 최상단에 위치하는 `<!DOCTYPE...>` 지시자 또한 DOM 노드가 된다.
 * 이 노드는 DOM 트리의 <html> 바로 위에 위치한다.
 * 
 * 노드 타입은 총 열두 가지 인데, 실무에선 주로 다음 네 가지를 노드를 다룬다.
    * 1. DOM의 '진입점'이 되는 문서(document) 노드
    * 2. HTML 태그에서 만들어지며, DOM 트리를 구성하는 블록인 요소 노드(element node)
    * 3. 텍스트를 포함하는 텍스트 노드(text node)
    * 4. 화면에 보이지는 않지만, 정보를 기록하고 자바스크립트를 사용해 이 정보를 DOM으로부터 읽을 수 있는 주석(comment) 노드
 * 
*/